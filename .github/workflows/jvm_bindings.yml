name: JVM Bindings ‚òï

permissions:
  contents: read

on:
  push:
    branches:
      - 'master'
    paths:
      - '**/jvm_bindings.yml'
      - '**/bindings/java/**'
      - '**/bindings/java.nim'
      - '**/bindings/java_types.nim'
  pull_request:
    paths:
      - '**/jvm_bindings.yml'
      - '**/bindings/java/**'
      - '**/bindings/java.nim'
      - '**/bindings/java_types.nim'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        nim_version:
          - '2.0.0'
        java_version:
          - '16'
        gradle_version:
          - '7.4.2'
    env:
      TIMEOUT_EXIT_STATUS: 124
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'temurin'
          architecture: x64
          cache: 'gradle'

      - name: Setup Gradle üêò
        uses: gradle/gradle-build-action@v2.4.2
        id: setup-gradle
        with:
          gradle-version: ${{ matrix.gradle_version }}

      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v3
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ hashFiles('*.nimble') }}

      - name: Setup Nim üëë
        uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: ${{ matrix.nim_version }}

      - name: JVM Bindings ‚òï
        run: |
          cd src
          echo "Unix module"
          nimble install -y -d jnim happyx
          nim c -d:noSignalHandler -d:export2jvm -d:release -d:httpx --app:lib --threads:on --opt:speed --mm:arc --out:../bindings/java/src/main/resources/happyx.so happyx.nim
          cd ..

      - name: Build Java Project ‚òï
        run: |
          cd bindings/java
          gradle build --scan
          chmod +x ./gradlew
          ./gradlew build --no-daemon
